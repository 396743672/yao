## 定时任务
spring:
  # 保存定时任务的数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: y3tu46262966
    url: jdbc:mysql://cdb-d5ge3ujs.cd.tencentcdb.com:10003/y3tu-admin??allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
  elasticjob:
    # 分布式任务协调依赖zookeeper
    zookeeper:
      server-lists: 127.0.0.1:2181
      namespace: y3tu-cloud-daemon
    # 普通任务
    simples:
      spring-simple-job:
        job-class: com.y3tu.cloud.daemon.job.SimpleJobTest
        cron: 0 0 0/1 * * ?
        sharding-total-count: 3
        sharding-item-parameters: 0=service1,1=service2,2=service3
        eventTraceRdbDataSource: 'dataSource'
        listener:
          listener-class: com.y3tu.cloud.daemon.listener.ElasticJobListener
      spring-simple-job2:
        job-class: com.y3tu.cloud.daemon.job.SimpleJob2Test
        cron: 0 0 0/1 * * ?
        sharding-total-count: 3
        sharding-item-parameters: 0=service1,1=service2,2=service3
        eventTraceRdbDataSource: 'dataSource'
        listener:
          listener-class: com.y3tu.cloud.daemonlistener.ElasticJobListener
    # 简单任务
    dataflows:
      spring-dataflow-job:
        job-class: com.y3tu.cloud.daemon.job.DataflowJobTest
        cron: 0 0 0/1 * * ?
        sharding-total-count: 3
        sharding-item-parameters: 0=service1,1=service2,2=service3
        streaming-process: true
        eventTraceRdbDataSource: 'dataSource'
        listener:
          distributed-listener-class: com.y3tu.cloud.daemon.listener.DistributeElasticJobListener
          started-timeout-milliseconds: 5000
          completed-timeout-milliseconds: 10000
